---
title: "index.qmd"
format: html
author: 
  -name: Young Ju Nam, Serenity Fan 
editor: visual
execute:
      warning: false
---
 
# DATA EXPLORATION
The data source employed in the creation of the following visualisizations is https://data.seoul.go.kr/dataList/342/S/2/datasetView.do . We note that where appropriate, Korean titles/words have been translated into English by Nam. 

```{r}
#| echo: false

rm(list=ls()) 

# install relevant packages
library(readxl)
library(dplyr)
library(tidyr)
library(tidyverse)
library(janitor)
library(readxl)
library(sampling)
library(haven) 
library(srvyr)
library(ipumsr)
library(janitor)
library(ggplot2)


```


# DATA CLEANING 
```{r, results='hide', message=FALSE, warning=FALSE} 
# #Remove X's from variable names 
# for ( col in 1:ncol(data) ){
#     colnames(data)[col] <- sub("X", "", colnames(data)[col])
# }
# 
# for ( col in 1:ncol(data) ){
#     colnames(data)[col] <- sub("\\.", "_", colnames(data)[col])
# }
# 
# data <- data %>%
#   rename_all(~ ifelse(grepl("_", .), ., paste0(., "_0")))
# 
# # #Remove .* 
# # names(data) <- sub("\\.{1}\\d*$", "", names(data))
# 
# data <- rename(data, Region = Year_0)
# 
# #Pivot 
# data_tidy <- data %>% 
#   pivot_longer(
#     cols = !Region,
#     names_to = c("year", "measure_type"),
#     names_sep = "_",
#     values_to = "Value"
#   )
# 
# data_tidier <- data_tidy %>% 
#   janitor::clean_names() %>% 
#   mutate_all(~as.character(.)) %>% 
#   pivot_longer(-parameter) %>%
#   mutate(name = str_remove_all(name, "...[0-9].*")) %>% 
#   mutate(year = rep(rep(1996:2022, each = 7), 25)) %>% 
#   pivot_wider(id_cols = c(year, parameter), names_from = name, values_from=value)


# load download data
korea_waterdata <- read_csv("data/korea_waterdata.csv", skip = 1)

# tidy data
org_data <- korea_waterdata %>% 
  janitor::clean_names() %>% 
  mutate_all(~as.character(.)) %>% 
  pivot_longer(-parameter) %>%
  mutate(name = str_remove_all(name, "_[0-9].*")) %>% 
  mutate(year = rep(rep(1996:2022, each = 7), 25))%>% 
  pivot_wider(id_cols = c(year, parameter), names_from = name,     
  values_from = value)

org_data <- org_data %>% 
  arrange(year, parameter)


# Assign 3 categories of water quality based on government criteria contained within document "data/Copy of Water_quality_criteria(WRMIS)(1)"
quality_added_data <- org_data %>%
   mutate_at(c('year', 'water_temperature_c', 'potential_of_hydrogen_p_h',
               'dissolved_oxygen_do_mg_l', 'biochemical_oxygen_demand_bod_mg_l',
               'chemical_oxygen_demand_cod_mg_l', 'suspended_solid_ss_mg_l',
               'coliform_bacteria_mpn'), as.numeric) %>% 
   mutate(quality = case_when(
                       6.5 <= potential_of_hydrogen_p_h &
                       8.5 >= potential_of_hydrogen_p_h &
                       dissolved_oxygen_do_mg_l >= 5.0 &
                       biochemical_oxygen_demand_bod_mg_l <= 3.0 &
                       chemical_oxygen_demand_cod_mg_l <= 5.0 &
                       suspended_solid_ss_mg_l <= 25.0 &
                       coliform_bacteria_mpn <= 1000.0 ~ "Good",
                       
                       6.5 <= potential_of_hydrogen_p_h &
                       8.5 >= potential_of_hydrogen_p_h &
                       dissolved_oxygen_do_mg_l >= 5.0 &
                       biochemical_oxygen_demand_bod_mg_l <= 5.0 &
                       chemical_oxygen_demand_cod_mg_l <= 7.0 &
                       suspended_solid_ss_mg_l <= 25.0 &
                       coliform_bacteria_mpn <= 5000.0 ~ "Normal",
          
                       dissolved_oxygen_do_mg_l >= 2.0 &
                       biochemical_oxygen_demand_bod_mg_l <= 99.0 &
                       chemical_oxygen_demand_cod_mg_l <= 99.0 &
                       suspended_solid_ss_mg_l <= 999.0 &
                       coliform_bacteria_mpn <= 999999999.0 ~ "Bad")
)
```


```{r} 
#Clean-up variable names 
quality_added_data <- quality_added_data %>% 
  rename(region = parameter, water_temp = water_temperature_c, pH = potential_of_hydrogen_p_h, dissO2 = dissolved_oxygen_do_mg_l, biochemO2 = biochemical_oxygen_demand_bod_mg_l, chemO2 = chemical_oxygen_demand_cod_mg_l, ss = suspended_solid_ss_mg_l, coli = coliform_bacteria_mpn)


```

# DATA VISUALIZATIONS

```{r, results='hide', message=FALSE, warning=FALSE} 
# Graph 1: Average temperature
library(ggplot2)

temp_data <- quality_added_data %>%
  group_by(year) %>%
  summarize(avg_temp = mean(water_temp, na.rm =TRUE))

ggplot(data = temp_data) +
  geom_line(mapping = aes(x = year, y = avg_temp), color = "blue") +
  geom_smooth(mapping = aes(x = year, y = avg_temp), color = "red", linetype = "dashed") + 
  labs(
    title = "Average (Blue) and Smoothed (Red) Water Temperature over Seoul neighborhoods, 1996-2022",
    subtitle = "Source: Water Resource Management Information System of South Korea (http://www.wamis.go.kr/wke/wke_wqbase_lst.do)",
    x = "Year",
    y = "Temperature (C)"
  ) + 
    theme(plot.title = element_text(size = 10)) + 
    theme(plot.subtitle = element_text(size = 7))

```

```{r, results='hide', message=FALSE, warning=FALSE} 
# Graph 2: Quality Proportions

temp2_data <- quality_added_data %>% 
  group_by(year) %>% 
  filter(!is.na(quality)) %>% 
  count(quality) %>% 
  mutate(p = n/sum(n)) 

ggplot(data = temp2_data) + 
  aes(x = year, y = p, fill = quality) + 
  geom_col() + 
  labs(
    title = "Proportions of Water Quality by Year, over Seoul Neighborhoods, 1996-2022",
    subtitle = "Source: Water Resource Management Information
    System of South Korea
    (http://www.wamis.go.kr/wke/wke_wqbase_lst.do)",
    x = "Year",
    y = "Proportion of Measurements in Category",
    fill = "Quality"
  ) +
    theme(plot.title = element_text(size = 12))
    theme(plot.subtitle = element_text(size = 10))

# ggplot(data = quality_added_data) +
#   geom_bar(aes(y = (..count..)/sum(..count..), x = year, fill = quality)) + 
#   labs(
#     title = "Proportions of Categorical Variable by Year, 1996-2022",
#     subtitle = "Source: Water Resource Management Information System of South Korea (http://www.wamis.go.kr/wke/wke_wqbase_lst.do)", 
#     x = "Year",
#     y = "Proportion",
#     fill = "Quality"
#   ) + 
#     theme(plot.subtitle = element_text(size = 6))
```

```{r, results='hide', message=FALSE, warning=FALSE} 
# Graph 3: Correlation between biochemical_oxygen_demand & chemical oxygen demand

ggplot(data = quality_added_data) +
  geom_point(mapping = aes(x = biochemO2, y = chemO2), color = "black", alpha = 0.3) + 
  labs(
    title = "Biochemical Oxygen Demand and Chemical Oxygen Demand, 1996-2022",
    subtitle = "Source: Water Resource Management Information System of South Korea (http://www.wamis.go.kr/wke/wke_wqbase_lst.do)", 
    x = "Biochemical Oxygen Demand [mg/L]",
    y = "Chemical Oxygen Demand [mg/L]"
  ) + 
  theme_minimal() + 
  theme(plot.subtitle = element_text(size = 7))
```


```{r, results='hide', message=FALSE, warning=FALSE} 
# Graph 4: Correlation between potential of hydrogen & dissolved oxygen

# ggplot(data = quality_added_data) +
#   geom_point(mapping = aes(x = pH, y = dissO2)) + 
#   labs(
#     title = "Correlation between pH and Dissolved O2",
#     subtitle = "1996-2022 Data", 
#     x = "pH",
#     y = "Dissolved Oxygen Content [mg/L]"
#   )

```

```{r, results='hide', message=FALSE, warning=FALSE} 
#Graph 5: 

ggplot(data = quality_added_data) + 
    geom_point(mapping = aes(x = ss, y = log(coli), color = region), size=1.5, alpha = 0.5) +
     labs(
      title = "Suspended Solids and Coliform Bacteria Concentration by Neighborhood, 1996-2022",
      subtitle = "Source: Water Resource Management Information System of South Korea (http://www.wamis.go.kr/wke/wke_wqbase_lst.do)", 
      x = "Suspended Solid Content [mg/L]",
      y = "log(Coliform [MPN/100mL])"
          ) +
  theme(plot.title = element_text(size = 11)) + 
  theme(plot.subtitle = element_text(size = 7))


```